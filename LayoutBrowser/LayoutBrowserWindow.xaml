<Window x:Class="LayoutBrowser.LayoutBrowserWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LayoutBrowser"
        xmlns:wpf="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:utils="clr-namespace:WpfAppCommon.Utils;assembly=WpfAppCommon"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        x:Name="wholeWindow"
        Title="{Binding CurrentTab.ViewModel.Title}"
        DataContext="{Binding ViewModel, RelativeSource={RelativeSource Mode=Self}}"
        Left="{Binding Left, Mode=TwoWay}" Top="{Binding Top, Mode=TwoWay}" Width="{Binding Width, Mode=TwoWay}" Height="{Binding Height, Mode=TwoWay}"
        WindowState="{Binding State, Mode=TwoWay}" WindowStyle="None" AllowsTransparency="True"
        Background="#01000000">
    <WindowChrome.WindowChrome>
        <WindowChrome UseAeroCaptionButtons="True" />
    </WindowChrome.WindowChrome>

    <Grid Margin="3" x:Name="resizeBorderMrg">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{Binding Source={x:Static SystemParameters.WindowGlassBrush}}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=wholeWindow, Path=IsActive}" Value="False">
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid WindowChrome.IsHitTestVisibleInChrome="True">
            <Grid.Resources>
                <BooleanToVisibilityConverter x:Key="BoolToVis" />

                <DataTemplate DataType="{x:Type local:WindowTabItem}">
                    <TextBlock Text="{Binding ViewModel.Title}" TextTrimming="CharacterEllipsis" MaxWidth="170"
                               ToolTip="{Binding ViewModel.Title}" />
                </DataTemplate>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" FontSize="10" Text="{Binding CurrentTab.ViewModel.Title}" IsHitTestVisible="False" Margin="5,1,1,1">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowTabBar}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Grid Grid.Column="0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Margin" Value="0,0,40,0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=wholeWindow, Path=WindowState}" Value="Maximized">
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <ListBox Grid.Row="0" x:Name="tabBar" ItemsSource="{Binding Tabs}" SelectedItem="{Binding CurrentTab, Mode=TwoWay}" 
                             DisplayMemberPath="ViewModel.Title" VerticalContentAlignment="Top" ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             utils:TiltWheelHorizontalScroller.EnableTiltWheelScroll="True" BorderThickness="0" Padding="-1"
                             Visibility="{Binding ShowTabBar, Converter={StaticResource BoolToVis}}" Background="#A0FFFFFF"
                             HorizontalAlignment="Left" Margin="0">
                        <i:Interaction.Behaviors>
                            <utils:ScrollIntoViewForListBox />
                        </i:Interaction.Behaviors>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <EventSetter Event="MouseDown" Handler="OnTabClicked" />
                                <Setter Property="Padding" Value="5,2" />
                                <Setter Property="Margin" Value="0,0,-1,0" />
                                <Setter Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="BorderBrush" Value="#50000000" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                    Padding="{TemplateBinding Control.Padding}"
                                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                    Background="{TemplateBinding Panel.Background}"
                                                    Name="Bd"
                                                    SnapsToDevicePixels="True">
                                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Selector.IsSelected" Value="False">
                                                    <Setter Property="Panel.Background" TargetName="Bd" Value="#20000000"/>
                                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#50000000</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Panel.Background" TargetName="Bd" Value="Transparent"/>
                                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#90000000</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background" TargetName="Bd" Value="#A0FFFFFF"/>
                                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#90000000</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background" TargetName="Bd" Value="#A0FFFFFF"/>
                                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#90000000</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger>
                                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                        <Setter.Value>
                                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <ToggleButton IsChecked="{Binding UiHidden}" Width="25" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" BorderThickness="0" Padding="0,0,0,1" IsTabStop="True" ToolTip="Toggle UI visibility (Ctrl+Shift+U)">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid Margin="{TemplateBinding Padding}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="Content" Value="△" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#99ffffff" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#b2ffffff" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding ShowTabBar}" Value="False">
                                        <Setter Property="FontSize" Value="10" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UiHidden}" Value="True">
                                        <Setter Property="Content" Value="▽" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <Button Width="45" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" BorderThickness="0" Content="✕" Padding="0,0,0,1" IsTabStop="False" Click="OnCloseClick">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid Margin="{TemplateBinding Padding}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="FontSize" Value="14" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#e81123" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#bbe81123" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding ShowTabBar}" Value="False">
                                        <Setter Property="FontSize" Value="10" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>

            <ItemsControl Grid.Row="1" Visibility="Hidden" ItemsSource="{Binding BackgroundLoading}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:WindowTabItem}">
                        <ContentPresenter Content="{Binding Control}" Height="{Binding ElementName=backdrop, Path=ActualHeight}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Grid x:Name="backdrop" Grid.Row="1" Background="White" />

            <ContentPresenter Grid.Row="1" Content="{Binding CurrentTab.Control}" Margin="-0.25,0,-0.25,-0.25" />
        </Grid>
    </Grid>
</Window>
